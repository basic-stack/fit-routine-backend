DROP TABLE TB_REPLY_LIKE;
DROP TABLE TB_POST_LIKE;
DROP TABLE TB_IMAGE;
DROP TABLE TB_REPLY;
DROP TABLE TB_MENU_DETAIL;
DROP TABLE TB_DAILY_MENU;
DROP TABLE TB_EXERCISE_DETAIL;
DROP TABLE TB_DAILY_EXERCISE;
DROP TABLE TB_ALARM;
DROP TABLE TB_FOLLOW;
DROP TABLE TB_TODO;
DROP TABLE TB_POST;
DROP TABLE TB_BLOG;
DROP TABLE TB_WITHDRAW;
DROP TABLE TB_MEMBER_DETAIL;
DROP TABLE TB_MENU;
DROP TABLE TB_EXERCISE;
DROP TABLE TB_MEMBER;

DROP SEQUENCE SEQ_POST_ID;
DROP SEQUENCE SEQ_REPLY_ID;
DROP SEQUENCE SEQ_MEMBER_ID;
DROP SEQUENCE SEQ_NOTICE_ID;
DROP SEQUENCE SEQ_TODO_ID;
DROP SEQUENCE SEQ_DAILY_MENU_ID;
DROP SEQUENCE SEQ_MENU_ID;
DROP SEQUENCE SEQ_DAILY_EXERCISE_ID;
DROP SEQUENCE SEQ_EXERCISE_ID;
DROP SEQUENCE SEQ_BLOG_ID;
DROP SEQUENCE SEQ_IMAGE_ID;
DROP SEQUENCE SEQ_WITHDRAW_ID;
DROP SEQUENCE SEQ_EXERCISE_DETAIL_ID;
DROP SEQUENCE SEQ_MENU_DETAIL_ID;

CREATE TABLE TB_MEMBER
(
    MEMBER_ID  NUMBER                               NOT NULL,
    EMAIL      VARCHAR2(255) UNIQUE                 NOT NULL,
    PASSWORD   VARCHAR2(255)                        NOT NULL,
    NICKNAME   VARCHAR2(50) UNIQUE                  NOT NULL,
    GENDER     CHAR(1) CHECK (GENDER IN ('M', 'F')) NOT NULL,
    BIRTH_AT   DATE                                 NOT NULL,
    PHONE      VARCHAR2(13) UNIQUE                  NOT NULL,
    CREATED_AT DATE    DEFAULT SYSDATE              NOT NULL,
    IS_DELETED CHAR(1) DEFAULT 'N'                  NOT NULL,
    PRIMARY KEY (MEMBER_ID)
);

CREATE TABLE TB_BLOG
(
    BLOG_ID   NUMBER           NOT NULL,
    MEMBER_ID NUMBER           NOT NULL UNIQUE,
    INTRODUCE VARCHAR2(255),
    GRADE     NUMBER DEFAULT 0 NOT NULL,
    PRIMARY KEY (BLOG_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID)
);

CREATE TABLE TB_MENU
(
    MENU_ID      NUMBER                                                      NOT NULL,
    NAME         VARCHAR2(100)                                               NOT NULL,
    CALORIE      NUMBER                                                      NOT NULL,
    CARBOHYDRATE NUMBER                                                      NOT NULL,
    PROTEIN      NUMBER                                                      NOT NULL,
    FAT          NUMBER                                                      NOT NULL,
    SODIUM       NUMBER                                                      NOT NULL,
    CATEGORY     VARCHAR2(30) CHECK (CATEGORY IN ('RICE', 'SIDES', 'SOUPS')) NOT NULL,
    PRIMARY KEY (MENU_ID)
);

CREATE TABLE TB_EXERCISE
(
    EXERCISE_ID NUMBER                                                                NOT NULL,
    NAME        VARCHAR2(100)                                                         NOT NULL,
    MET         NUMBER                                                                NOT NULL,
    CATEGORY    VARCHAR2(50) CHECK (CATEGORY IN ('UPPER', 'LOWER', 'CARDIO', 'LIFE')) NOT NULL,
    PRIMARY KEY (EXERCISE_ID)
);

CREATE TABLE TB_TODO
(
    TODO_ID     NUMBER                                                                           NOT NULL,
    MEMBER_ID   NUMBER                                                                           NOT NULL,
    STARTED_AT  DATE                                                                             NOT NULL,
    ENDED_AT    DATE                                                                             NOT NULL,
    PURPOSE     VARCHAR2(30) CHECK (PURPOSE IN ('ENDURANCE', 'STRENGTH', 'MAINTENANCE', 'DIET')) NOT NULL,
    CATEGORY    VARCHAR2(8)  CHECK (CATEGORY IN ('MENU', 'EXERCISE'))                            NOT NULL,
    DAY_REPEAT  NUMBER,
    TDEE        NUMBER,
    GOAL_WEIGHT NUMBER,
    PRIMARY KEY (TODO_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID) ON DELETE CASCADE
);

CREATE TABLE TB_DAILY_MENU
(
    DAILY_MENU_ID NUMBER NOT NULL,
    TODO_ID       NUMBER NOT NULL,
    DAY_NO        NUMBER NOT NULL,
    PRIMARY KEY (DAILY_MENU_ID),
    FOREIGN KEY (TODO_ID) REFERENCES TB_TODO (TODO_ID) ON DELETE CASCADE
);

CREATE TABLE TB_DAILY_EXERCISE
(
    DAILY_EXERCISE_ID NUMBER NOT NULL,
    TODO_ID           NUMBER NOT NULL,
    DAY_NO            NUMBER NOT NULL,
    PRIMARY KEY (DAILY_EXERCISE_ID),
    FOREIGN KEY (TODO_ID) REFERENCES TB_TODO (TODO_ID) ON DELETE CASCADE
);

CREATE TABLE TB_MENU_DETAIL
(
    MENU_DETAIL_ID NUMBER NOT NULL,
    DAILY_MENU_ID  NUMBER NOT NULL,
    MENU_ID        NUMBER NOT NULL,
    PRIMARY KEY (MENU_DETAIL_ID),
    FOREIGN KEY (DAILY_MENU_ID) REFERENCES TB_DAILY_MENU (DAILY_MENU_ID) ON DELETE CASCADE,
    FOREIGN KEY (MENU_ID) REFERENCES TB_MENU (MENU_ID)
);

CREATE TABLE TB_EXERCISE_DETAIL
(
    EXERCISE_DETAIL_ID NUMBER NOT NULL,
    DAILY_EXERCISE_ID  NUMBER NOT NULL,
    EXERCISE_ID        NUMBER NOT NULL,
    PRIMARY KEY (EXERCISE_DETAIL_ID),
    FOREIGN KEY (DAILY_EXERCISE_ID) REFERENCES TB_DAILY_EXERCISE (DAILY_EXERCISE_ID) ON DELETE CASCADE,
    FOREIGN KEY (EXERCISE_ID) REFERENCES TB_EXERCISE (EXERCISE_ID)
);

CREATE TABLE TB_POST
(
    POST_ID    NUMBER                                                                                  NOT NULL,
    TITLE      VARCHAR2(150)                                                                           NOT NULL,
    CONTENT    VARCHAR2(1500),
    CATEGORY   VARCHAR2(20) DEFAULT 'ALL' CHECK (CATEGORY IN ('ALL', 'DIET', 'STRENGTH', 'ENDURANCE')) NOT NULL,
    CREATED_AT DATE         DEFAULT SYSDATE                                                            NOT NULL,
    BLOG_ID    NUMBER                                                                                  NOT NULL,
    PRIMARY KEY (POST_ID),
    FOREIGN KEY (BLOG_ID) REFERENCES TB_BLOG (BLOG_ID)
);

CREATE TABLE TB_IMAGE
(
    IMAGE_ID    NUMBER        NOT NULL,
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL UNIQUE,
    POST_ID     NUMBER        NOT NULL,
    PRIMARY KEY (IMAGE_ID),
    FOREIGN KEY (POST_ID) REFERENCES TB_POST (POST_ID) ON DELETE CASCADE
);

CREATE TABLE TB_REPLY
(
    REPLY_ID   NUMBER               NOT NULL,
    POST_ID    NUMBER               NOT NULL,
    MEMBER_ID  NUMBER               NOT NULL,
    CONTENT    VARCHAR2(1500)       NOT NULL,
    PARENT_ID  NUMBER,
    CREATED_AT DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (REPLY_ID),
    FOREIGN KEY (POST_ID) REFERENCES TB_POST (POST_ID) ON DELETE CASCADE,
    FOREIGN KEY (MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID)
);

CREATE TABLE TB_REPLY_LIKE
(
    MEMBER_ID     NUMBER NOT NULL,
    REPLY_ID      NUMBER NOT NULL,
    PRIMARY KEY (MEMBER_ID, REPLY_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID),
    FOREIGN KEY (REPLY_ID) REFERENCES TB_REPLY (REPLY_ID) ON DELETE CASCADE
);

CREATE TABLE TB_POST_LIKE
(
    MEMBER_ID    NUMBER NOT NULL,
    POST_ID      NUMBER NOT NULL,
    PRIMARY KEY (MEMBER_ID, POST_ID),
    FOREIGN KEY (POST_ID) REFERENCES TB_POST (POST_ID) ON DELETE CASCADE,
    FOREIGN KEY (MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID)
);

CREATE TABLE TB_ALARM
(
    NOTICE_ID          NUMBER                                                               NOT NULL,
    CONTENT            VARCHAR2(100)                                                        NOT NULL,
    CATEGORY           VARCHAR2(30) CHECK (CATEGORY IN ('BLOG_FOLLOWED',
                                                        'POST_REPLIED',
                                                        'POST_LIKED',
                                                        'REPLY_LIKED'))                     NOT NULL,
    CREATED_AT         DATE DEFAULT SYSDATE                                                 NOT NULL,
    RECEIVER_MEMBER_ID NUMBER                                                               NOT NULL,
    SENDER_MEMBER_ID   NUMBER                                                               NOT NULL,
    IS_READ            CHAR(1) CHECK (IS_READ IN ('Y', 'N'))                                NOT NULL,
    PRIMARY KEY (NOTICE_ID),
    FOREIGN KEY (RECEIVER_MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID) ON DELETE CASCADE,
    FOREIGN KEY (SENDER_MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID) ON DELETE CASCADE
);

CREATE TABLE TB_FOLLOW
(
    FOLLOWER_BLOG_ID NUMBER NOT NULL,
    FOLLOWED_BLOG_ID NUMBER NOT NULL,
    PRIMARY KEY (FOLLOWER_BLOG_ID, FOLLOWED_BLOG_ID),
    FOREIGN KEY (FOLLOWER_BLOG_ID) REFERENCES TB_MEMBER (MEMBER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FOLLOWED_BLOG_ID) REFERENCES TB_MEMBER (MEMBER_ID) ON DELETE CASCADE
);

CREATE TABLE TB_MEMBER_DETAIL
(
    MEMBER_ID        NUMBER NOT NULL,
    HEIGHT           NUMBER NOT NULL,
    WEIGHT           NUMBER NOT NULL,
    PRIMARY KEY (MEMBER_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID)
);

CREATE TABLE TB_WITHDRAW
(
    WITHDRAW_ID   NUMBER               NOT NULL,
    MEMBER_ID     NUMBER               NOT NULL,
    REASON  VARCHAR2(3000),
    WITHDRAW_AT   DATE DEFAULT SYSDATE NOT NULL,
    PRIMARY KEY (WITHDRAW_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES TB_MEMBER (MEMBER_ID)
);

CREATE SEQUENCE SEQ_POST_ID NOCACHE;
CREATE SEQUENCE SEQ_REPLY_ID NOCACHE;
CREATE SEQUENCE SEQ_MEMBER_ID NOCACHE;
CREATE SEQUENCE SEQ_NOTICE_ID NOCACHE;
CREATE SEQUENCE SEQ_TODO_ID NOCACHE;
CREATE SEQUENCE SEQ_DAILY_MENU_ID NOCACHE;
CREATE SEQUENCE SEQ_MENU_ID NOCACHE;
CREATE SEQUENCE SEQ_DAILY_EXERCISE_ID NOCACHE;
CREATE SEQUENCE SEQ_EXERCISE_DETAIL_ID NOCACHE;
CREATE SEQUENCE SEQ_EXERCISE_ID NOCACHE;
CREATE SEQUENCE SEQ_BLOG_ID NOCACHE;
CREATE SEQUENCE SEQ_IMAGE_ID NOCACHE;
CREATE SEQUENCE SEQ_WITHDRAW_ID NOCACHE;
CREATE SEQUENCE SEQ_MENU_DETAIL_ID NOCACHE;

CREATE OR REPLACE TRIGGER TRG_GRADE
    AFTER INSERT ON TB_POST
    FOR EACH ROW
BEGIN
    UPDATE TB_BLOG
    SET GRADE = GRADE + 1
    WHERE BLOG_ID = :NEW.BLOG_ID;
END;
/
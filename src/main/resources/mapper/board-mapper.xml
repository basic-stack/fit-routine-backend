<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.khedu.fitroutine.board.mapper.BoardMapper">
    <select id="getPopularBoardTop3" resultType="kr.co.khedu.fitroutine.board.model.dto.PopularBoard">
        SELECT BOARD_ID, TITLE, NICKNAME
        FROM (
            SELECT
                B.BOARD_ID,
                B.TITLE,
                M.NICKNAME,
                COUNT(L.BOARD_ID) AS LIKE_COUNT
            FROM
                TB_BOARD B
                JOIN TB_MEMBER M ON B.MEMBER_ID = M.MEMBER_ID
                LEFT JOIN TB_BOARD_LIKE L ON B.BOARD_ID = L.BOARD_ID
            GROUP BY
                B.BOARD_ID,
                B.TITLE,
                M.NICKNAME
            ORDER BY
                LIKE_COUNT DESC
        )
        WHERE ROWNUM &lt;= 3
    </select>
    <insert id="insertSelectBoard" parameterType="kr.co.khedu.fitroutine.board.model.dto.BoardCreate">
        <selectKey keyProperty="boardId" resultType="long" order="BEFORE">
            SELECT SEQ_BOARD_ID.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO TB_BOARD
        VALUES (
        #{boardId},
        #{title},
        #{content},
        #{category},
        SYSDATE,
        (SELECT BLOG_ID FROM TB_BLOG WHERE MEMBER_ID = #{memberId})
        )
    </insert>

    <insert id="saveBoardImage">
        INSERT INTO TB_IMAGE
        VALUES (SEQ_IMAGE_ID.NEXTVAL, #{originalFileName}, #{changedFileName}, #{boardId})
    </insert>

    <delete id="deleteImage">
        DELETE TB_IMAGE
        WHERE IMAGE_ID = #{deleteImageId}
    </delete>

    <select id="getBoardDetailForEdit" resultType="kr.co.khedu.fitroutine.board.model.dto.BoardDetailForEdit">
        SELECT BOARD_ID, TITLE, CONTENT, CATEGORY
        FROM TB_BOARD
        WHERE BOARD_ID = #{boardId}
        AND BLOG_ID = (SELECT BLOG_ID FROM TB_BLOG WHERE MEMBER_ID = #{ownerId})
    </select>

    <select id="getImagesByBoardId" resultType="kr.co.khedu.fitroutine.board.model.vo.Image">
        SELECT IMAGE_ID, ORIGIN_NAME, CHANGE_NAME, BOARD_ID
        FROM TB_IMAGE
        WHERE BOARD_ID = #{boardId}
    </select>

    <update id="updateBoardDetail">
        UPDATE TB_BOARD
        SET TITLE = #{title}, CATEGORY = #{category}, CONTENT = #{content}
        WHERE BOARD_ID = #{boardId} AND
        BLOG_ID = (SELECT BLOG_ID FROM TB_BLOG WHERE MEMBER_ID = #{ownerId})
    </update>

    <select id="getBoardDetailWithLike" resultType="kr.co.khedu.fitroutine.board.model.dto.BoardDetailWithLike">
        SELECT BOARD.TITLE, BOARD.CONTENT, M.NICKNAME, BOARD.CREATED_AT,
        (
            SELECT COUNT(1)
            FROM TB_BOARD_LIKE
            WHERE BOARD_ID = #{boardId}
        ) AS LIKE_COUNT,
        CASE
            WHEN EXISTS (
                SELECT 1
                FROM TB_BOARD_LIKE
                WHERE MEMBER_ID = #{viewerId}
                AND BOARD_ID = #{boardId}
            ) THEN 1
        ELSE 0
        END AS LIKED
        FROM TB_BOARD "BOARD"
        JOIN TB_BLOG "BLOG" ON BOARD.BLOG_ID = BLOG.BLOG_ID
        JOIN TB_MEMBER M ON BLOG.MEMBER_ID = M.MEMBER_ID
        WHERE BOARD.BOARD_ID = #{boardId}
    </select>
</mapper>